{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/nehanakrani/Projects/nehanakrani/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState,useEffect,lazy,Suspense}from\"react\";import ApolloClient,{gql}from\"apollo-boost\";import{openSource}from\"../../portfolio\";import Contact from\"../contact/Contact\";import Loading from\"../loading/Loading\";const renderLoader=()=>/*#__PURE__*/React.createElement(Loading,null);const GithubProfileCard=lazy(()=>import('../../components/githubProfileCard/GithubProfileCard'));export default function Profile(){const[prof,setrepo]=useState([]);function setProfileFunction(array){setrepo(array);}function getProfileData(){const client=new ApolloClient({uri:\"https://api.github.com/graphql\",request:operation=>{operation.setContext({headers:{authorization:\"Bearer \".concat(openSource.githubConvertedToken)}});}});client.query({query:gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n      {\\n        user(login:\\\"\",\"\\\") { \\n          name\\n          bio\\n          isHireable\\n          avatarUrl\\n          location\\n        }\\n    }\\n      \"])),openSource.githubUserName)}).then(result=>{setProfileFunction(result.data.user);}).catch(function(error){console.log(error);setProfileFunction(\"Error\");console.log(\"Because of this Error Contact Section is Showed instead of Profile\");openSource.showGithubProfile=\"false\";});}useEffect(()=>{if(openSource.showGithubProfile===\"true\"){getProfileData();}},[]);if(openSource.showGithubProfile===\"true\"&&!(typeof prof==='string'||prof instanceof String)){return/*#__PURE__*/React.createElement(Suspense,{fallback:renderLoader()},/*#__PURE__*/React.createElement(GithubProfileCard,{prof:prof,key:prof.id}));}else{return/*#__PURE__*/React.createElement(Contact,null);}}","map":{"version":3,"names":["React","useState","useEffect","lazy","Suspense","ApolloClient","gql","openSource","Contact","Loading","renderLoader","createElement","GithubProfileCard","Profile","prof","setrepo","setProfileFunction","array","getProfileData","client","uri","request","operation","setContext","headers","authorization","concat","githubConvertedToken","query","_templateObject","_taggedTemplateLiteral","githubUserName","then","result","data","user","catch","error","console","log","showGithubProfile","String","fallback","key","id"],"sources":["/Users/nehanakrani/Projects/nehanakrani/src/containers/profile/Profile.js"],"sourcesContent":["import React, { useState, useEffect ,lazy, Suspense } from \"react\";\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport { openSource } from \"../../portfolio\";\nimport Contact from \"../contact/Contact\";\nimport Loading from \"../loading/Loading\";\n\nconst renderLoader = () => <Loading />;\nconst GithubProfileCard = lazy(() => import('../../components/githubProfileCard/GithubProfileCard'));\nexport default function Profile() {\n  const [prof, setrepo] = useState([]);\n  function setProfileFunction(array) {\n    setrepo(array);\n  }\n  function getProfileData() {\n    const client = new ApolloClient({\n      uri: \"https://api.github.com/graphql\",\n      request: (operation) => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`,\n          },\n        });\n      },\n    });\n\n    client\n      .query({\n        query: gql`\n      {\n        user(login:\"${openSource.githubUserName}\") { \n          name\n          bio\n          isHireable\n          avatarUrl\n          location\n        }\n    }\n      `,\n      })\n      .then((result) => {\n        setProfileFunction(result.data.user);\n      })\n      .catch(function (error) {\n          console.log(error);\n          setProfileFunction(\"Error\");\n          console.log(\"Because of this Error Contact Section is Showed instead of Profile\");\n          openSource.showGithubProfile = \"false\";\n      });\n  }\n  useEffect(() => {\n    if (openSource.showGithubProfile === \"true\") {\n      getProfileData();\n    }\n  }, []);\nif (openSource.showGithubProfile === \"true\" && !(typeof prof === 'string' || prof instanceof String)){  \n    return (\n      <Suspense fallback={renderLoader()}>\n        <GithubProfileCard prof={prof} key={prof.id} /> \n      </Suspense>\n       );\n  } else {\n    return <Contact />;\n  }\n}\n"],"mappings":"8JAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,IAAI,CAAEC,QAAQ,KAAQ,OAAO,CAClE,MAAO,CAAAC,YAAY,EAAIC,GAAG,KAAQ,cAAc,CAChD,OAASC,UAAU,KAAQ,iBAAiB,CAC5C,MAAO,CAAAC,OAAO,KAAM,oBAAoB,CACxC,MAAO,CAAAC,OAAO,KAAM,oBAAoB,CAExC,KAAM,CAAAC,YAAY,CAAGA,CAAA,gBAAMV,KAAA,CAAAW,aAAA,CAACF,OAAO,KAAE,CAAC,CACtC,KAAM,CAAAG,iBAAiB,CAAGT,IAAI,CAAC,IAAM,MAAM,CAAC,sDAAsD,CAAC,CAAC,CACpG,cAAe,SAAS,CAAAU,OAAOA,CAAA,CAAG,CAChC,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACpC,QAAS,CAAAe,kBAAkBA,CAACC,KAAK,CAAE,CACjCF,OAAO,CAACE,KAAK,CAAC,CAChB,CACA,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACxB,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAd,YAAY,CAAC,CAC9Be,GAAG,CAAE,gCAAgC,CACrCC,OAAO,CAAGC,SAAS,EAAK,CACtBA,SAAS,CAACC,UAAU,CAAC,CACnBC,OAAO,CAAE,CACPC,aAAa,WAAAC,MAAA,CAAYnB,UAAU,CAACoB,oBAAoB,CAC1D,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEFR,MAAM,CACHS,KAAK,CAAC,CACLA,KAAK,CAAEtB,GAAG,CAAAuB,eAAA,GAAAA,eAAA,CAAAC,sBAAA,yKAEIvB,UAAU,CAACwB,cAAc,CASzC,CAAC,CAAC,CACDC,IAAI,CAAEC,MAAM,EAAK,CAChBjB,kBAAkB,CAACiB,MAAM,CAACC,IAAI,CAACC,IAAI,CAAC,CACtC,CAAC,CAAC,CACDC,KAAK,CAAC,SAAUC,KAAK,CAAE,CACpBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAClBrB,kBAAkB,CAAC,OAAO,CAAC,CAC3BsB,OAAO,CAACC,GAAG,CAAC,oEAAoE,CAAC,CACjFhC,UAAU,CAACiC,iBAAiB,CAAG,OAAO,CAC1C,CAAC,CAAC,CACN,CACAtC,SAAS,CAAC,IAAM,CACd,GAAIK,UAAU,CAACiC,iBAAiB,GAAK,MAAM,CAAE,CAC3CtB,cAAc,CAAC,CAAC,CAClB,CACF,CAAC,CAAE,EAAE,CAAC,CACR,GAAIX,UAAU,CAACiC,iBAAiB,GAAK,MAAM,EAAI,EAAE,MAAO,CAAA1B,IAAI,GAAK,QAAQ,EAAIA,IAAI,WAAY,CAAA2B,MAAM,CAAC,CAAC,CACjG,mBACEzC,KAAA,CAAAW,aAAA,CAACP,QAAQ,EAACsC,QAAQ,CAAEhC,YAAY,CAAC,CAAE,eACjCV,KAAA,CAAAW,aAAA,CAACC,iBAAiB,EAACE,IAAI,CAAEA,IAAK,CAAC6B,GAAG,CAAE7B,IAAI,CAAC8B,EAAG,CAAE,CACtC,CAAC,CAEf,CAAC,IAAM,CACL,mBAAO5C,KAAA,CAAAW,aAAA,CAACH,OAAO,KAAE,CAAC,CACpB,CACF","ignoreList":[]},"metadata":{},"sourceType":"module"}